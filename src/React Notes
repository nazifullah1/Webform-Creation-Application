<h1> Prints out text in various headers </h1>
<p> prints out basic text </p>
<fieldset> creates a box </fieldset>
<label> creates boxes (forms) </label>
<input type="text" name = "First Name"  onChange={handleChange}/>
//input type can be text, tel, number, email etc: name is the "variable name"

<select name = "Classes" onChange ={handleChange}>
              <option value= "">--Please choose an option--</option>
              <option value= "CSC60">CSC60</option>
              <option value= "CSC130">CSC130</option>
              <option value= "CSC131">CSC131</option>
            </select>
//puts a dropdown and user selects which value they want

import React, { useReducer, useState } from 'react';
import Logo from './assets/CSUS.png';
import './App.css';

const formReducer = (state, event) => {
  return {
    ...state,
    [event.name]: event.value
  }
}

function App() {
  const[formData, setFormData] = useReducer(formReducer, {});
  const[submitting, setSubmitting] = useState(false);

  const handleSubmit = event =>{
    event.preventDefault();
    setSubmitting(true);
    alert('The form will now be submitted.')    //notification when the form is submitted

    setTimeout(() => {
      setSubmitting(false); 
    }, 9000)
  }

  const handleChange = event => {
    setFormData({
      name: event.target.name,
      value: event.target.value,
    });
  }
  return (
    <div className="wrapper">                       
    <header className="App-header"> 
      <h1>CSC131 Project </h1> 
      <img src={Logo} className="App-logo" alt="logo" />
      <h2>Team Delta's Project</h2>
      {submitting && <div>
        You are submitting the following:
        <ul>
          {Object.entries(formData).map(([name, value]) => (<li key = {name}><strong>{name}</strong>:  {value.toString()}</li>))}
        </ul>
      </div>
      } 
      <form onSubmit={handleSubmit}>

        <fieldset>
          <label>
            <p>Name</p>
            <input type="text" name = "First Name"  onChange={handleChange}/>
            <p>Last Name</p>
            <input type="text" name = "Last Name" onChange={handleChange}/>
            <p>Number</p>
            <input type="tel" name = "Number" onChange={handleChange}/>
            <p>Email</p>
            <input type="email" name = "Email" onChange={handleChange}/>
          </label>
        </fieldset>

        <fieldset>
          <label>
            <p>Classes</p>
            <select name = "Classes" onChange ={handleChange}>
              <option value= "">--Please choose an option--</option>
              <option value= "CSC60">CSC60</option>
              <option value= "CSC130">CSC130</option>
              <option value= "CSC131">CSC131</option>
            </select>
          </label>
          <label>
            <p>Amount of Units</p>
            <input type="number" name="Units" onChange={handleChange} step="1"/>
          </label>
          <label>
            <p>Enrolled in Section 3</p>
            <input type="checkbox" name="Enrolled" onChange={handleChange} />
          </label>
        </fieldset>
        <p>Thank you for filling out the form</p>
        <button type="submit">Submit</button>
        <p></p>
      </form>
      </header>
    </div>
  );
}
export default App;

.App {
  text-align: center;
}


.App-logo {
  height: 20vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    //animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(5px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.wrapper {
  padding: 0px 0px;
}

.wrapper fieldset {
  margin: 25px 0;
}





import React, {useState, useEffect} from 'react'

import CropOriginalIcon from '@material-ui/icons/CropOriginal';
import Select from '@material-ui/core/Select';
import Switch from '@material-ui/core/Switch';
import CheckBoxIcon from '@material-ui/icons/CheckBox';
import ShortTextIcon from '@material-ui/icons/ShortText';
import SubjectIcon from '@material-ui/icons/Subject';
import MoreVertIcon from '@material-ui/icons/MoreVert';
import {BsTrash} from "react-icons/bs"
import {IconButton} from '@material-ui/core';
import FilterNameIcon from '@material-ui/icons/FilterNone';
import AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';
import OndemandVideoIcon from '@material-ui/icons/OndemandVideo';
import TextFieldsIcon from '@material-ui/icons/TextFields';
import {BSFileText} from 'react-icons/bs';
import Accordion from '@material-ui/core/Accordion';
import AccordionSummary from '@material-ui/core/AccordionSummary';
import AccordionDetails from '@material-ui/core/AccordionDetails';
import Button from '@material-ui/core/Button';
import {FcRightUp} from "react-icons/fc";
import CloseIcon from '@material-ui/icons/Close';
import Radio from '@material-ui/core/Radio';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import {Typography} from '@material-ui/core';
import MenuItem from '@material-ui/core/MenuItem';
import "./Question_form.css"

function Question_form(){
    const [questions, setQuestions] = useState(
        [{questionText: "Which class is this for ? ", 
        questionType: "radio", 
        options : [
            {optionText: "CSC60"},
            {optionText: "CSC130"},
            {optionText: "CSC131"},
            {optionText: "CSC35"}
        ],
    open: true,
    required: false}]
    )

    function questionsUI() {
        return questions.map((ques, i) => (
            <div>
            <Accordion expanded= {questions[i].open} className= {questions[i].open ? 'add_border' : ""}>

                <AccordionSummary aria-controls= "panel1a-content" id= "panel1a-header" elevation= {1} style= {{width: '100%'}}
                  >
                    { questions[i].open ? (

                    <div className= "saved_questions">
                    <Typography  style={{fontSize:"15px",fontWeight:"400",letterSpacing: '.1px',lineHeight:'24px',paddingBottom:"8px"}} >{i+1}.  {ques.questionText}</Typography>
    
                    {ques.options.map((op, j)=>(
     

                    <div key= {j} >
                        <div style= {{display: 'flex',}}>
                        <FormControlLabel style= {{marginLeft: "5px", marginBottom: "5px"}} disabled control= {<input type= {ques.questionType}
                        color= "primary" style= {{marginRight: '3px', }} required= {ques.type}/>} label = {
                            <Typography style = {{fontFamily: 'Roboto, Arial, sans-serif',                                    
                                fontSize: '13px',
                                fontWeight: '400',
                                letterSpacing: '.2px',
                                lineHeight: '20px',
                                color: '#202124'}}>
                                {ques.options[j].optionText}
                                </Typography>
                                } />
                            </div>
                                        
                    </div>
                                
                    ))}
                    </div>
                    ): ""}

                    </AccordionSummary>
                    <div className= "question_boxes">
                        <AccordionDetails className= "add_question">
                                <div className= "add_question_top">
                                    <input type= "text" className= "question" placeholder= "Question" value= {ques.questionText} ></input>
                                    <CropOriginalIcon style= {{color: "#5f6368"}} />
                                    <Select className= "select" style= {{color: "#5f6368", fontSize: "13px"}} >
                                        <MenuItem id= "text" value= "text" > <SubjectIcon style= {{marginRight: "10px"}} /> Paragraph </MenuItem>
                                        <MenuItem id= "checkbox" value= "Checkbox" ><CheckBoxIcon style= {{marginRight: "10px", color: "#70757a"}} checked /> Checkboxes</MenuItem>
                                        <MenuItem id= "radio" value= "Radio" > <Radio style= {{marginRight: "10px", color: "#70757a"}} checked/> Multiple Choice</MenuItem>
                                    </Select>
                                </div>
                                {ques.options.map((op, j)=> (
                                    <div className= "add_question_body" key={j}>
                                        {
                                            (ques.questionType!="text") ?
                                            <input type= {ques.questionType} style= {{marginRight: "10px"}}/> :
                                            <ShortTextIcon style= {{marginRight: "10px"}} />
                                        }
                                    
                                        <div >
                                            <input type= "text" className= "text_input" placeholder= "option" value= {ques.options[j].optionText}></input>
                                        </div>

                                        <CropOriginalIcon style= {{color: "#5f6368"}}/>

                                        <IconButton aria-label= "delete" >
                                            <CloseIcon />
                                        </IconButton>
                                    </div>

                                ))}
                                    {ques.options.length < 5 ? (
                                        <div className = "add_question_body">
                                            <FormControlLabel disabled control= {
                                            (ques.questoinType != "text") ?
                                            <input type= {ques.questionType} color= "primary" inputProps= {{'aria-label': 'secondary checkbox' }}
                                                        style= {{marginLeft: "10px", marginRight: "10px"}} disabled /> :
                                            <ShortTextIcon style = {{marginRight: "10px"}} />

                                            } label= {
                                            <div>
                                                <input type= "text" className= "text_input" style= {{fontSize: "13px", width: "60px"}} placeholder= "Add other"></input>
                                                <Button size= "small" style= {{textTransform: 'none', color: "#4285f4", fontSize: "13px", fontWeight: 600}}>Add Option</Button>
                                            </div>
                                            } />
                                        </div>
                                    ): ""}



                                <div className= "add_footer">
                                    <div className= "add_question_bottom_left">
                                    
                                    <Button size= "small" style= {{textTransform: 'none', color: "#4285f4", fontSize: "13px", fontWeight: "600"}}>
                                        <FcRightUp style= {{border: "2px solid #4285f4", padding: "2px", marginRight: "8px"}} /> Answer key </Button>
                                    </div>
                                    <div className= "add_question_bottom">
                                        <IconButton aria-label= "Copy" >
                                            <FilterNameIcon />
                                        </IconButton>

                                        <IconButton aria-label= "Delete" >
                                            <BsTrash />
                                        </IconButton>
                                            <span style= {{color: "#5f6368", fontSize: "13px"}}>Required </span> <Switch name= "checkedA" color="primary" checked= {ques.required}/>
                                        <IconButton>
                                            <MoreVertIcon />
                                        </IconButton>
                                    </div>
                                </div>
                        </AccordionDetails>
                    </div>
            </Accordion>
            </div>
        ))
    }

    return(
        <div>
            <div className= "question_form">
                <br></br>
                <div className= "section">
                    <div calssName= "question_title_section">
                        <div className= "question_form_top">
                            <input type= "text" className= "question_form_top_name" style= {{color: "black"}} placeholder= "Untitled Document"></input>
                            <input type= "text" className= "question_form_top_desc" placeholder= "Form Description"></input>
                        </div>
                    </div>

                    {questionsUI()}
                </div>
            </div>

        </div>
    )
}

export default Question_form;